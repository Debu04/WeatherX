{"version":3,"sources":["components/Navbar.js","components/weathercard.js","components/temp.js","App.js","index.js"],"names":["Navbar","className","href","type","id","Weathercard","temp","humidity","weathermood","pressure","name","speed","country","sunset","all","React","useState","weatherState","setWeatherState","useEffect","date","Date","timeStr","getHours","getMinutes","toLocaleString","Temp","props","searchValue","setSearchValue","tempInfo","setTempInfo","getWeatherInfo","a","url","appid","fetch","res","json","data","main","weather","wind","sys","clouds","console","log","placeholder","autoFocus","value","onChange","e","target","onClick","App","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06633d70.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">ＷｅａｔｈｅｒＸ</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect } from 'react'\r\n\r\nconst Weathercard = ({  temp,\r\n    humidity,\r\n    pressure,\r\n    weathermood,\r\n    name,\r\n    speed,\r\n    country,\r\n    sunset,all }) => {\r\n    const [weatherState, setWeatherState] = React.useState(\"\");\r\n    \r\n    // Weather mood Icons according to the current weather.\r\n    useEffect(() => {\r\n        if (weathermood) {\r\n            switch (weathermood) {\r\n                case \"Clouds\": setWeatherState(\" wi-day-cloudy\");\r\n                    break;\r\n                case \"Haze\": setWeatherState(\"wi-fog\");\r\n                    break;\r\n                case \"Clear\": setWeatherState(\"wi-day-sunny\");\r\n                    break;\r\n                case \"Mist\": setWeatherState(\"wi-dust\");\r\n                    break;\r\n                default: setWeatherState(\"wi-day-Sunny\");\r\n                    break;\r\n            }\r\n        }\r\n    }, [weathermood]);\r\n    \r\n    // Converting seconds to readable time.\r\n    let sec = sunset;\r\n    let date = new Date(sec * 1000);\r\n    let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n\r\n    return (\r\n        <>\r\n            {/* Our temp card */}\r\n            <article className=\"widget\">\r\n                <div className=\"weatherIcon\">\r\n                    <i className={`wi ${weatherState}`}></i>\r\n                </div>\r\n                <div className=\"weatherInfo\">\r\n                    <div className=\"temperature\">\r\n                        <span>{temp}&deg;</span>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <div className=\"weatherCondition\">{weathermood}</div>\r\n                        <div className=\"place\">{name},{country}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"date\">{new Date().toLocaleString()}</div>\r\n                {/* Our Four colomun section. */}\r\n                <div className=\"extra-temp\">\r\n                    <div className=\"temp-info-minmax\">\r\n                        <div className=\"two-sidded-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-sunset\"}></i>\r\n                            </p>    \r\n                            <p className=\"extra-info-leftside\">\r\n                                {timeStr} PM <br />\r\n                                Sunset\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"two-sidded-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-humidity\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">{humidity} <br />Humidity</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"weather-extra-info\">\r\n                        <div className=\"two-sidded-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-cloud\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">{all}% <br />Clouds</p>\r\n                        </div>\r\n                        <div className=\"two-sidded-section\">\r\n                            <p>\r\n                                <i className={\" wi wi-windy\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">{speed} Km/h <br />Speed</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weathercard;\r\n","\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport \"./style.css\";\r\nimport Weathercard from './weathercard';\r\n\r\nconst Temp = (props) => {\r\n    const [searchValue, setSearchValue] = useState(\"Balasore\");\r\n    const [tempInfo, setTempInfo] = useState({});\r\n    const getWeatherInfo = async () => {\r\n        try {\r\n            let url =\r\n                `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=${props.appid}`;\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n\r\n            // Parsing the real Api data.\r\n            // temp, humidity and pressure are in the same object.\r\n            // Featching the data from the API\r\n            const { temp, humidity, pressure } = data.main;\r\n            const { main: weathermood } = data.weather[0];\r\n            const { name } = data;\r\n            const { speed } = data.wind;\r\n            const { country, sunset } = data.sys;\r\n            const {all} = data.clouds;\r\n            // Arranging all data in one for easy use.\r\n            const myNewWeatherInfo = {\r\n                temp,\r\n                humidity,\r\n                pressure,\r\n                weathermood,\r\n                name,\r\n                speed,\r\n                country,\r\n                sunset,\r\n                all\r\n            };\r\n            setTempInfo(myNewWeatherInfo);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getWeatherInfo();\r\n    }, [])\r\n\r\n    return (<>\r\n        <div className=\"wrap\">\r\n            <div className=\"search\">\r\n                <input type=\"search\"\r\n                    placeholder=\"search...\"\r\n                    autoFocus\r\n                    id=\"search\"\r\n                    className=\"searchTerm\"\r\n                    value={searchValue}\r\n                    onChange={(e) => setSearchValue(e.target.value)}\r\n                />\r\n                <button className=\"searchButton\" type=\"button\" onClick={getWeatherInfo}>\r\n                    Search\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <Weathercard {...tempInfo}/>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default Temp;\r\n","import React from 'react';\nimport Navbar from './components/Navbar';\nimport Temp from './components/temp';\n\nconst App = () => {\n  \n// Here we are fetching the api key from the (.env.local) File.\nconst apiKey = process.env.REACT_APP_WEATHER_API\n\n  return (\n    <>\n    <Navbar/>\n    <Temp appid={apiKey}/>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}